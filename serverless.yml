service:                                stripe

provider:
  name:                                 aws
  runtime:                              python3.6
  stage:                                dev
  region:                               ${env:REG}
  # apiKeys:
  #   - ${env:API_KEY}
  iamRoleStatements:
    - Effect:                           Allow
      Action:
        - states:StartExecution
      Resource:                         ${self:resources.Outputs.Ingestion.Value}
    - Effect:                           Allow
      Action:
        - s3:PutObject
      Resource:                         "*"

custom:
  accountId:                            ${env:AWSID}

functions:
  executor:
    handler:                            handler.executor
    environment:
      REG:                              ${env:REG}
      ARN:                              ${self:resources.Outputs.Ingestion.Value}
    events:
      - http:
          path:                         ingest
          method:                       POST
          # private:                      true
  extractRawEvent:
    handler:                            handler.extractRawEvent
  extractEvent:
    handler:                            handler.extractEvent
  extractCharge:
    handler:                            handler.extractCharge
  extractCard:
    handler:                            handler.extractCard
  extractEventMap:
    handler:                            handler.extractEventMap
  upsertRawEvent:
    handler:                            handler.upsertRawEvent
    environment:
      DB_URL:                           ${env:DBURL}
  upsertEvent:
    handler:                            handler.upsertEvent
    environment:
      DB_URL:                           ${env:DBURL}
  upsertCharge:
    handler:                            handler.upsertCharge
    environment:
      DB_URL:                           ${env:DBURL}
  upsertCard:
    handler:                            handler.upsertCard
    environment:
      DB_URL:                           ${env:DBURL}
  upsertEventMap:
    handler:                            handler.upsertEventMap
    environment:
      DB_URL:                           ${env:DBURL}
  writeCardCSVS3:
    handler:                            handler.writeCardCSVS3
    environment:
      BUCKET:                           ${env:S3BUCKET}

stepFunctions:
  stateMachines:
    ingestion:
      definition:
        name:                           Ingestion
        StartAt:                        Parallel
        States:
          Parallel:
            Type:                       Parallel
            End:                        true
            Branches:
            - StartAt:                  extractRawEvent
              States:
                extractRawEvent:
                  Type:                 Task
                  Resource:             arn:aws:lambda:${env:REG}:${env:AWSID}:function:${self:service}-${opt:stage}-extractRawEvent
                  Next:                 upsertRawEvent
                upsertRawEvent:
                  Type:                 Task
                  Resource:             arn:aws:lambda:${env:REG}:${env:AWSID}:function:${self:service}-${opt:stage}-upsertRawEvent
                  End:                  true
            - StartAt:                  extractEvent
              States:
                extractEvent:
                  Type:                 Task
                  Resource:             arn:aws:lambda:${env:REG}:${env:AWSID}:function:${self:service}-${opt:stage}-extractEvent
                  Next:                 upsertEvent
                upsertEvent:
                  Type:                 Task
                  Resource:             arn:aws:lambda:${env:REG}:${env:AWSID}:function:${self:service}-${opt:stage}-upsertEvent
                  End:                  true
            - StartAt:                  extractCharge
              States:
                extractCharge:
                  Type:                 Task
                  Resource:             arn:aws:lambda:${env:REG}:${env:AWSID}:function:${self:service}-${opt:stage}-extractCharge
                  Next:                 upsertCharge
                upsertCharge:
                  Type:                 Task
                  Resource:             arn:aws:lambda:${env:REG}:${env:AWSID}:function:${self:service}-${opt:stage}-upsertCharge
                  End:                  true
            - StartAt:                  extractCard
              States:
                extractCard:
                  Type:                 Task
                  Resource:             arn:aws:lambda:${env:REG}:${env:AWSID}:function:${self:service}-${opt:stage}-extractCard
                  Next:                 parallelUpsertCard
                parallelUpsertCard:
                  Type:                 Parallel
                  End:                  true
                  Branches:
                    - StartAt:          upsertCard
                      States:
                        upsertCard:
                          Type:         Task
                          Resource:     arn:aws:lambda:${env:REG}:${env:AWSID}:function:${self:service}-${opt:stage}-upsertCard
                          End:          true
                    - StartAt:          writeCardCSVS3
                      States:
                        writeCardCSVS3:
                          Type:         Task
                          Resource:     arn:aws:lambda:${env:REG}:${env:AWSID}:function:${self:service}-${opt:stage}-writeCardCSVS3
                          End:          true
            - StartAt:                  extractEventMap
              States:
                extractEventMap:
                  Type:                 Task
                  Resource:             arn:aws:lambda:${env:REG}:${env:AWSID}:function:${self:service}-${opt:stage}-extractEventMap
                  Next:                 upsertEventMap
                upsertEventMap:
                  Type:                 Task
                  Resource:             arn:aws:lambda:${env:REG}:${env:AWSID}:function:${self:service}-${opt:stage}-upsertEventMap
                  End:                  true

resources:
  Outputs:
    Ingestion:
      Description: The ARN of the state machine
      Value:
        Ref: Ingestion

plugins:
  - serverless-step-functions
  - serverless-python-requirements
